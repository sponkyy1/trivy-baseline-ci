name: Trivy CI with manual baseline diff and GitHub Pages (/docs)

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  trivy-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo (with history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: Build Docker image
        run: docker build -t myapp:ci-${{ github.run_id }} .

      - name: Run Trivy scan
        run: trivy image --format json -o trivy-results.json myapp:ci-${{ github.run_id }}

      - name: Check if baseline exists
        id: check_baseline
        run: |
          if [ -f .trivy/baseline.json ]; then
            echo "baseline_exists=true" >> $GITHUB_OUTPUT
          else
            echo "baseline_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Compare vulnerabilities with baseline (detailed diff)
        if: steps.check_baseline.outputs.baseline_exists == 'true'
        run: |
          jq -r '.Results[].Vulnerabilities[]? | [.VulnerabilityID, .PkgName, .InstalledVersion, .Severity, .Title] | @tsv' trivy-results.json | sort > current.tsv
          jq -r '.Results[].Vulnerabilities[]? | .VulnerabilityID' .trivy/baseline.json | sort -u > baseline_ids.txt

          echo "🛡️ New vulnerabilities (not in baseline):"
          echo ""

          while IFS=$'\t' read -r cve pkg ver sev title; do
            if ! grep -q "$cve" baseline_ids.txt; then
              echo "🆕 $cve"
              echo "  Package: $pkg"
              echo "  Version: $ver"
              echo "  Severity: $sev"
              echo "  Title: $title"
              echo ""
            fi
          done < current.tsv

      - name: Generate diff markdown report
        if: steps.check_baseline.outputs.baseline_exists == 'true'
        run: |
          mkdir -p docs
          echo "## 🆕 New Vulnerabilities Compared to Baseline" > docs/diff.md
          echo "" >> docs/diff.md
          echo "| CVE ID | Package | Version | Severity | Title |" >> docs/diff.md
          echo "|--------|---------|---------|----------|-------|" >> docs/diff.md

          jq -r '.Results[].Vulnerabilities[]? | [.VulnerabilityID, .PkgName, .InstalledVersion, .Severity, .Title] | @tsv' trivy-results.json | sort > current.tsv
          jq -r '.Results[].Vulnerabilities[]?.VulnerabilityID' .trivy/baseline.json | sort -u > baseline_ids.txt

          while IFS=$'\t' read -r cve pkg ver sev title; do
            if ! grep -q "$cve" baseline_ids.txt; then
              echo "| $cve | $pkg | $ver | $sev | $title |" >> docs/diff.md
            fi
          done < current.tsv

      - name: Install Pandoc
        run: sudo apt update && sudo apt install -y pandoc

      - name: Convert Markdown to HTML for GitHub Pages
        run: |
          pandoc docs/diff.md -o docs/index.html
          echo "✅ HTML generated at docs/index.html"

      - name: Update baseline in repo and commit docs/
        run: |
          mkdir -p .trivy
          cp trivy-results.json .trivy/baseline.json

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git pull origin main

          git add .trivy/baseline.json docs/index.html docs/diff.md
          if git diff --cached --quiet; then
            echo "No changes – skipping commit."
          else
            git commit -m "Update Trivy baseline and GitHub Pages report"
            git push origin main
          fi
